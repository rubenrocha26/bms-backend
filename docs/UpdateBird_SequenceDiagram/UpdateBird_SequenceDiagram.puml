@startuml
actor user
autonumber

title: UpdateBird_SequenceDiagram

user -> UI ++ #application : I want to update a bird
UI --> user -- : bird scientificName, mutation, birdRing, dateOfBirth?
user -> UI ++ #application : birdDto(scientificName, mutation, birdRing, dateOfBirth)
UI -> ":BirdController" as BirdController ++ #application : updateBird(birdId, birdDto)

BirdController -> ":BirdServiceImpl" as BirdServiceImpl ++ #application : updateBird(birdId, birdDto)
BirdServiceImpl -> ":BirdMapper" as BirdMapper ++ #application : mapToBird(birdDto)

BirdMapper -> BirdMapper : getId
BirdMapper -> BirdMapper : getScientificName
BirdMapper -> BirdMapper : getMutation
BirdMapper -> BirdMapper : getBirdRing
BirdMapper -> BirdMapper : getDateOfBirth
BirdMapper -> ":BirdFactory" as BirdFactory ++ #application : createBird(id, scientificName, mutation, birdRing, dateOfBirth)

create "bird1:Bird" as Bird
BirdFactory -> Bird ++ #application : <create> (id, scientificName, mutation, birdRing, dateOfBirth)
Bird --> BirdFactory -- : bird1
BirdFactory --> BirdMapper -- : bird1
BirdMapper --> BirdServiceImpl -- : bird1
BirdServiceImpl -> ":BirdRepository" as BirdRepository ++ #application : findById(birdId)
BirdRepository -> BirdRepository : findById(birdId)
BirdRepository --> BirdServiceImpl  -- : existingBird

BirdServiceImpl -> BirdServiceImpl : update existingBird with bird1 details
BirdServiceImpl -> BirdRepository ++ #application : save(existingBird)
BirdRepository -> BirdRepository : save(existingBird)
BirdRepository --> BirdServiceImpl  -- : updatedBird

BirdServiceImpl -> BirdMapper ++ #application : mapToBirdDto(updatedBird)
BirdMapper -> BirdMapper : getId
BirdMapper -> BirdMapper : getScientificName
BirdMapper -> BirdMapper : getMutation
BirdMapper -> BirdMapper : getBirdRing
BirdMapper -> BirdMapper : getDateOfBirth
BirdMapper -> "BirdDtoFactory" as BirdDtoFactory ++ #application : createBirdDto(id, scientificName, mutation, birdRing, dateOfBirth)

create "birdDto1:BirdDto" as BirdDto
BirdDtoFactory -> BirdDto ++ #application : <create> (id, scientificName, mutation, birdRing, dateOfBirth)
BirdDto --> BirdDtoFactory -- : birdDto1
BirdDtoFactory --> BirdMapper -- : birdDto1
BirdMapper --> BirdServiceImpl -- : birdDto1
BirdServiceImpl --> BirdController -- : birdDto1
BirdController --> UI -- : birdDto1
UI --> user -- : birdDto1
@enduml